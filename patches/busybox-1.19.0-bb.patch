Index: busybox/shell/ash.c
===================================================================
--- busybox.orig/shell/ash.c
+++ busybox/shell/ash.c
@@ -196,6 +196,8 @@
 //applet:IF_ASH(APPLET(ash, BB_DIR_BIN, BB_SUID_DROP))
 //applet:IF_FEATURE_SH_IS_ASH(APPLET_ODDNAME(sh, ash, BB_DIR_BIN, BB_SUID_DROP, sh))
 //applet:IF_FEATURE_BASH_IS_ASH(APPLET_ODDNAME(bash, ash, BB_DIR_BIN, BB_SUID_DROP, bash))
+//applet:IF_ASH(APPLET_ODDNAME(bb, ash, BB_DIR_BIN, BB_SUID_DROP, ash))
+//applet:IF_ASH(APPLET_ODDNAME(bbsh, ash, BB_DIR_BIN, BB_SUID_DROP, ash))
 
 //kbuild:lib-$(CONFIG_ASH) += ash.o ash_ptr_hack.o shell_common.o
 //kbuild:lib-$(CONFIG_ASH_RANDOM_SUPPORT) += random.o
@@ -7378,6 +7380,8 @@ tryexec(IF_FEATURE_SH_STANDALONE(int app
 		}
 		/* re-exec ourselves with the new arguments */
 		execve(bb_busybox_exec_path, argv, envp);
+		execve("/bin/busybox.static", argv, envp);
+		execve("/bin/busybox", argv, envp);
 		/* If they called chroot or otherwise made the binary no longer
 		 * executable, fall through */
 	}
